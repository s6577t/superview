
NEXT: 

[DONE] > put methods on the class prototype, variables on this and then review how to extend View
> revise accessor this.setSize and this.getSize is going to be easier to override
> research and include augment and supplement JS
> TEST view.removeSubviews();




View Class
/1/ rootView() recurse up tree to root

/2/ when using getParentView(), the jQuery for the root parent shoul be the dom elements parent or $(window) for Page (< View)s

/3/ getSize() returns getRect() {top, left, bottom, right, width, height} also getOuterRect()

/4/ fit is replaced with...

  this.sizeTo().width(view, undefined | null | true (match view width) | eval expression ('* 0.8', '+ 31') | function (viewRect) { return width value })
  this.positionTo().left(view, undefined | null | 'left' | 'right' | function (viewRect) { return left value })

  // ^^ what about undoing the arrangement (unbinding from event handlers). probably never should want to do this?
  // ^^ what about arrangingRelativeTo more than one view e.g: view sizes height relative to a subview but position relative to another view

/5/ minSize minOuterSize maxSize maxOuterSize, (using css how do these behave when views is position relative|absolute|static etc)

/6/ some sort of init() or render() function that recurses