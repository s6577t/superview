
> remove deepCopy and shallowCopy - use bare jQuery $.extend
> return a COPY of restrictions from Superview#restrictions

?> change to use api like Superview.extend({}) rather than MyView() { Object.extend(this).withMixin(Superview)}


1:
  
  c: finish impl superview.restrictions INCL additional resize() AND moveTo() specs to prevent resizing and moving beyond restritions

-> remove the dependency on z() - it's not worth it for just one simple use case

-> VISUAL_SPECS for constraints

  d: contentArea()
    > size changes when its superview's border is set
    > view.contentArea().[resize|moveTo|size|position|restrictTo|anchorTo]()
    > reintroduce page/window specs
  e: get rid of Superview#$() replace with elem() => HTMLElement
  
put restrictions() functionality in superview.restrictions and likewise for similar behaviour
modularize: viewtree+rect are standard, anchoring is a mixin (but all superviews have it)

2: padding and border css intercepts -> trigger event
3: refactor anchoring and fix fractional positioning bug (if it exists?)
?4: detect and refuse cyclic anchoring
5: ancestor anchoring behaviour revision
6: anchorBoundsTo handling
7: fix draggable with padding/border bug

>: if I bind a box to the right of something and then resize it, it should still stick to the right
        > visual spec
        > spec
>: if I bind to the right of an ancestor I don't want it's right position, I want width (similar with bottom/height)
        > visual spec
        > spec

>: dragging with a border sent the position F**king crazy

>: raise an error if there are cyclic anchorings

>: setting paddings and borders causes a resize .css({}) intercept border/padding changes

>: RETEST visual and spec: fractional layouts anchorTo(..., {left: 0.5})

>: bounds (max/min inner/outer Top|Left|Right|Bottom|Width|Height) should be anchorable too! bounds() and anchorBoundsTo()

>: run tests and view visuals in Safari and Firefox and on the iPad

> review controller setter/getter
  
